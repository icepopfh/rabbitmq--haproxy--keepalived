global
	log 127.0.0.1 local2
	chroot /usr/local/haproxy              # 改变当前工作目录
	pidfile /var/run/haproxy.pid         # haproxy的pid存放路径,启动进程的用户必须有权限访问此文件
	maxconn 4000                         # 最大连接数，默认4000
	user haproxy                         # 默认用户
	group haproxy                        # 默认组
	daemon                               # 创建1个进程进入deamon模式运行。此参数要求将运行模式设置为daemon
	stats socket /usr/local/haproxy/haproxy.sock  # 创建监控所用的套接字目录
#---------------------------------------------------------------------
# defaults settings
#---------------------------------------------------------------------
# 注意：因为要使用tcp的负载，屏蔽掉与http相关的默认配置
defaults
	mode http                            # 默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
	log global
	# option httplog                     # 采用http日志格式
	option dontlognull                   # 启用该项，日志中将不会记录空连接。所谓空连接就是在上游的负载均衡器
	# option http-server-close           # 每次请求完毕后主动关闭http通道
	# option forwardfor except 127.0.0.0/8  # 如果后端服务器需要获得客户端真实ip需要配置的参数，可以从Http Header中获得客户端ip
	option redispatch                    # serverId对应的服务器挂掉后,强制定向到其他健康的服务器
	retries 3                            # 3次连接失败就认为服务不可用，也可以通过后面设置
	# timeout http-request 10s           
	timeout queue 1m
	timeout connect 10s                  # 连接超时时间
	timeout client 1m                    # 客户端连接超时时间
	timeout server 1m                    # 服务器端连接超时时间
	# timeout http-keep-alive 10s
	timeout check 10s          	
	maxconn 3000                         # 最大连接数
	
###################### 打开haproxy的监测界面###############################
listen status
	bind 0.0.0.0:9188
	mode http
	stats enable
	stats refresh 30s
	stats uri /haproxy                     #设置haproxy监控地址为http://localhost:9188/haproxy 
	stats auth admin:123456              #添加用户名密码认证
	stats realm welcome login\ haproxy
	stats admin if TRUE
	
######################监听rabbitmq的web操作页面############################
listen rabbitmq_cluster_web
    bind 0.0.0.0:15672
    server rabbit1 192.168.15.126:15672 check inter 5000 rise 2 fall 2
    server rabbit2 192.168.15.129:15672 check inter 5000 rise 2 fall 2
    server rabbit3 192.168.15.130:15672 check inter 5000 rise 2 fall 2
	
#######################rabbitmq_cluster_AMQP##################################
#listen rabbitmq_cluster_AMQP
#	bind 0.0.0.0:5671
#	mode tcp
#	balance roundrobin                   #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）
#	server rabbit1 192.168.15.126:5671 check inter 5000 rise 2 fall 2  #check inter 2000 是检测心跳频率
#	server rabbit2 192.168.15.129:5671 check inter 5000 rise 2 fall 2  #rise 2是2次正确认为服务器可用
#	server rabbit3 192.168.15.130:5671 check inter 5000 rise 2 fall 2  #fall 2是2次失败认为服务器不可用
	
#######################rabbitmq_cluster_AMQP2##################################
listen rabbitmq_cluster_AMQP2
	bind 0.0.0.0:5672
	mode tcp
	balance roundrobin                   #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）
	server rabbit1 192.168.15.126:5672 check inter 5000 rise 2 fall 2  #check inter 2000 是检测心跳频率
	server rabbit2 192.168.15.129:5672 check inter 5000 rise 2 fall 2  #rise 2是2次正确认为服务器可用
	server rabbit3 192.168.15.130:5672 check inter 5000 rise 2 fall 2  #fall 2是2次失败认为服务器不可用
	
#######################rabbitmq_cluster_epmd##################################
listen rabbitmq_cluster_epmd
	bind 0.0.0.0:4369
	mode tcp
	balance roundrobin                   #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）
	server rabbit1 192.168.15.126:4369 check inter 5000 rise 2 fall 2  #check inter 2000 是检测心跳频率
	server rabbit2 192.168.15.129:4369 check inter 5000 rise 2 fall 2  #rise 2是2次正确认为服务器可用
	server rabbit3 192.168.15.130:4369 check inter 5000 rise 2 fall 2  #fall 2是2次失败认为服务器不可用
	
#######################rabbitmq_cluster_erlang##################################
listen rabbitmq_cluster_erlang
	bind 0.0.0.0:25672
	mode tcp
	balance roundrobin                   #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）
	server rabbit1 192.168.15.126:25672 check inter 5000 rise 2 fall 2  #check inter 2000 是检测心跳频率
	server rabbit2 192.168.15.129:25672 check inter 5000 rise 2 fall 2  #rise 2是2次正确认为服务器可用
	server rabbit3 192.168.15.130:25672 check inter 5000 rise 2 fall 2  #fall 2是2次失败认为服务器不可用
	
#######################rabbitmq_cluster_stomp##################################
listen rabbitmq_cluster_stomp
	bind 0.0.0.0:61613
	mode tcp
	balance roundrobin                   #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）
	server rabbit1 192.168.15.126:61613 check inter 5000 rise 2 fall 2  #check inter 2000 是检测心跳频率
	server rabbit2 192.168.15.129:61613 check inter 5000 rise 2 fall 2  #rise 2是2次正确认为服务器可用
	server rabbit3 192.168.15.130:61613 check inter 5000 rise 2 fall 2  #fall 2是2次失败认为服务器不可用
	
#######################rabbitmq_cluster_stomp2##################################
listen rabbitmq_cluster_stomp2
	bind 0.0.0.0:15674
	mode tcp
	balance roundrobin                   #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）
	server rabbit1 192.168.15.126:15674 check inter 5000 rise 2 fall 2  #check inter 2000 是检测心跳频率
	server rabbit2 192.168.15.129:15674 check inter 5000 rise 2 fall 2  #rise 2是2次正确认为服务器可用
	server rabbit3 192.168.15.130:15674 check inter 5000 rise 2 fall 2  #fall 2是2次失败认为服务器不可用


